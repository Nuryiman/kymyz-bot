from aiogram import Router, F
from aiogram.types import CallbackQuery

from handlers.handlers import db
from keyboards import *

call_router = Router()


@call_router.callback_query(F.data.in_({"top_groups", "cancel_to_stat_group"}))
async def top_groups(callback: CallbackQuery):
    await callback.message.edit_text("–£–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–Ω–¥–∞–Ω—ã–∑:", reply_markup=day_or_alltime_group_kb)


@call_router.callback_query(F.data.in_({"top_players", "cancel_to_stat"}))
async def top_users(callback: CallbackQuery):
    await callback.message.edit_text("–£–±–∞–∫—ã—Ç—Ç—ã —Ç–∞–Ω–¥–∞–Ω—ã–∑:", reply_markup=day_or_alltime_kb)


@call_router.callback_query(F.data == "users_all_time_top")
async def top_users_all_time(callback: CallbackQuery):
    top_users = db.get_global_top_users()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if top_users:
        user_statistic = "\n".join([
            f"{index + 1}. {user[1]} - {user[2]:.1f} –ª–∏—Ç—Ä"
            for index, user in enumerate(top_users)
        ])
    else:
        user_statistic = "–ì—Ä—É–ø–ø–∞–¥–∞ –æ—é–Ω—á—É –∂–æ–∫"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
    await callback.message.edit_text(f"ü•õüîùü•õ–ì–ª–æ–±–∞–ª–¥—É—É —ç–Ω –º—ã–∫—Ç—ã –æ—é–Ω—á—É–ª–∞—Ä:\n\n{user_statistic}", reply_markup=cancel_to_users_top)


@call_router.callback_query(F.data == "users_day_top")
async def top_users_day(callback: CallbackQuery):
    top_users = db.get_global_day_top_users()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if top_users:
        user_statistic = "\n".join([
            f"{index + 1}. {user[1]} - {user[2]:.1f} –ª–∏—Ç—Ä"
            for index, user in enumerate(top_users)
        ])
    else:
        user_statistic = "–ì—Ä—É–ø–ø–∞–¥–∞ –æ—é–Ω—á—É –∂–æ–∫"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
    await callback.message.edit_text(f"ü•õüîùü•õ–ë–∏—Ä –∫—É–Ω–¥—É–Ω –∏—á–∏–Ω–¥–µ–≥–∏ –≥–ª–æ–±–∞–ª–¥—É—É —ç–Ω –º—ã–∫—Ç—ã –æ—é–Ω—á—É–ª–∞—Ä:\n\n{user_statistic}",
                                     reply_markup=cancel_to_users_top)


@call_router.callback_query(F.data == "groups_day_top")
async def top_groups_day(callback: CallbackQuery):
    top_groups_list = db.get_day_top_groups()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if top_users:
        user_statistic = "\n".join([
            f"{index + 1}. <a href='tg://resolve?domain={group[1]}'>{group[2]}</a> - {group[3]:.1f} –ª–∏—Ç—Ä"
            if group[1] is not None
            else f"{index + 1}. {group[2]} - {group[3]:.1f} –ª–∏—Ç—Ä"
            for index, group in enumerate(top_groups_list)
        ])
    else:
        user_statistic = "–ì—Ä—É–ø–ø–∞–¥–∞ –æ—é–Ω—á—É –∂–æ–∫"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
    await callback.message.edit_text(f"ü•õüîùü•õ–ë–∏—Ä –∫—É–Ω–¥—É–Ω –∏—á–∏–Ω–¥–µ –≥–ª–æ–±–∞–ª–¥—É—É —ç–Ω –∫—ã–º—ã–∑–¥—ã –∫–æ–ø –∏—á–∫–µ–Ω –≥—Ä—É–ø–ø–∞–ª–∞—Ä:\n\n{user_statistic}",
                                     reply_markup=cancel_to_group_top, parse_mode='HTML')


@call_router.callback_query(F.data == "groups_all_time_top")
async def top_groups_all_top(callback: CallbackQuery):
    top_groups_list = db.get_top_groups()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –≥—Ä—É–ø–ø
    if top_groups:
        group_statistic = "\n".join([
            f"{index + 1}. <a href='tg://resolve?domain={group[1]}'>{group[2]}</a> - {group[3]:.1f} –ª–∏—Ç—Ä"
            if group[1] is not None
            else f"{index + 1}. {group[2]} - {group[3]:.1f} –ª–∏—Ç—Ä"
            for index, group in enumerate(top_groups_list)
        ])
    else:
        group_statistic = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥—Ä—É–ø–ø–∞—Ö."

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–ø-–≥—Ä—É–ø–ø–∞—Ö
    await callback.message.edit_text(f"ü•õüîùü•õ–ì–ª–æ–±–∞–ª–¥—É—É —ç–Ω –∫—ã–º—ã–∑–¥—ã –∫–æ–ø –∏—á–∫–µ–Ω –≥—Ä—É–ø–ø–∞–ª–∞—Ä:\n\n{group_statistic}",
                                     reply_markup=cancel_to_group_top, parse_mode='HTML')


@call_router.callback_query(F.data == "cancel")
async def cancel_tops(callback: CallbackQuery):
    await callback.message.edit_text(text="–°–∏–∑ –∫–∞–∞–ª–∞–≥–∞–Ω —Ç–æ–ø—Ç—É —Ç–∞–Ω–¥–∞–Ω—ã–∑", reply_markup=stat_kb)
